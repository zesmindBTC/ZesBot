{
  "name": "btce",
  "version": "0.4.4",
  "description": "BTC-E Trading API",
  "main": "btce.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/petermrg/node-btce.git"
  },
  "keywords": [
    "btc-e",
    "btce",
    "bitcoin",
    "btc",
    "trading",
    "api",
    "litecoin",
    "ltc"
  ],
  "author": {
    "name": "Peter Morgan"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "2497dc25839ccf43c69ff0f707b3e0faf3f38885",
  "bugs": {
    "url": "https://github.com/petermrg/node-btce/issues"
  },
  "readme": "# BTC-E API for Node.js\n\nSimple API to BTC-E Crypto Coin Trading platform\n\n## Features\n\n  * Full API (Public and Trade)\n  * Asynchronous requests\n  * Automatically converts Date objects, strings and JS timestamps to UNIX timestamps\n\n## Usage samples\n\n### Install\n\n```\nnpm install btce\n```\n\n### Init\n\n```javascript\nvar BTCE = require('btce')\nvar btce = new BTCE('YOUR-KEY', 'YOUR-SECRET')\n```\n\n### Get a ticker\n\n```javascript\nbtce.ticker({ pair: 'btc_usd' }, function(err, data) {\n  if (!err) console.log(data)\n  else console.log(err)\n})\n```\n\n### Display user information (funds, transaction count, open orders count...)\n\n```javascript\nbtce.getInfo(function(err, data) {\n  if (!err) console.log(data)\n  else console.log(err)\n})\n```\n\n### Get last 10 transactions in descending order\n\n```javascript\nbtce.transHistory({ count: 10, order: 'DESC' }, function(err, data) {\n  if (!err) console.log(data)\n  else console.log(err)\n})\n```\n\n### Buy 2 bitcoins for 100$ each\n\n```javascript\nbtce.trade({'pair': 'btc_usd', 'type': 'buy', 'rate': 100.0, 'amount': 2.0}, function(err, data) {\n  if (!err) console.log(data);\n  else console.log(err);\n});\n```\n\n## Methods\n\n```javascript\n// Trade API (requires api key and secret)\ngetInfo(callback)\ntransHistory(params, callback)\ntradeHistory(params, callback)\norderList(params, callback)\nactiveOrders(params, callback)\ntrade(params, callback)\ncancelOrder(orderId, callback)\nquery(method, params, callback)\n\n// Public API\nfee(params, callback)\ntrades(params, callback)\ndepth(params, callback)\nticker(params, callback)\n\n// utils\ngetTimestamp(time)\ngetHTTPS(url, callback)\n```\n\nInformation about parameters in source comments\n\n## BTC-E API documentation\n\n  * Trade: https://btc-e.com/api/documentation\n  * Public: https://btc-e.com/page/2\n\n## Feature requests\n\n  * petermrg at ymail dot com\n\n## Donate\n\n  * BTC: 1GVRSmJzZpFoLvFnPNtdwPeVXh6t4t65PZ\n  * LTC: LWSRwTDKVxE9BGziUzbUw7MkHz6KACVnAA\n  * XPM: Aett4LKYVkaHXzp3EJAUiMzk29No9a9ZUu\n",
  "_id": "btce@0.4.4",
  "dist": {
    "shasum": "458e71a139aeb505a0ebff7c4ab121a269f2ad80"
  },
  "_from": "btce@",
  "_resolved": "https://registry.npmjs.org/btce/-/btce-0.4.4.tgz"
}
